{
  "permissions": {
    "allow": [
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_file",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__search_files",
      "mcp__filesystem__write_file",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__move_file",
      "mcp__filesystem__get_file_info",
      "mcp__github__*",
      "mcp__repomix__*",
      "mcp__perplexity__ask",
      "mcp__jetbrains__*",
      "mcp__context7__*",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(uv sync:*)",
      "Bash(.venv/bin/python:*)",
      "Bash(uv add:*)",
      "Bash(uv remove:*)",
      "Bash(uv run:*)",
      "Bash(uv install:*)",
      "Bash(uv lock:*)",
      "Bash(git checkout:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git branch:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git stash:*)",
      "Bash(git reset:*)",
      "Bash(git rebase:*)",
      "Bash(git clone:*)",
      "Bash(git remote:*)",
      "Bash(git tag:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(tree:*)",
      "Bash(which:*)",
      "Bash(where:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(pip:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(yarn:*)",
      "Bash(node:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(uvx:*)",
      "Bash(poetry:*)",
      "Bash(conda:*)",
      "Bash(pipenv:*)",
      "Bash(pytest:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(ruff:*)",
      "Bash(pre-commit:*)",
      "Bash(make:*)",
      "Bash(cmake:*)",
      "Bash(rustc:*)",
      "Bash(cargo:*)",
      "Bash(go:*)",
      "Bash(javac:*)",
      "Bash(java:*)",
      "Bash(mvn:*)",
      "Bash(gradle:*)",
      "Bash(tsc:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(xmllint:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(nc:*)",
      "Bash(telnet:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(df:*)",
      "Bash(du:*)",
      "Bash(free:*)",
      "Bash(uptime:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(groups:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(alias:*)",
      "Bash(history:*)",
      "Bash(date:*)",
      "Bash(cal:*)",
      "Bash(sleep:*)",
      "Bash(timeout:*)",
      "Bash(watch:*)",
      "Bash(screen:*)",
      "Bash(tmux:*)",
      "Bash(vim:*)",
      "Bash(nano:*)",
      "Bash(emacs:*)",
      "Bash(code:*)",
      "Bash(true)",
      "Bash(false)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(read:*)",
      "Bash(test:*)",
      "Bash([:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(realpath:*)",
      "Bash(pwd)",
      "Bash(cd:*)",
      "Bash(pushd:*)",
      "Bash(popd:*)",
      "Bash(dirs:*)"
    ],
    "deny": [
      "Bash(rm -rf /:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(format:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(halt:*)",
      "Bash(poweroff:*)",
      "Bash(init:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(crontab:*)",
      "Bash(at:*)",
      "Bash(batch:*)"
    ]
  }
}
